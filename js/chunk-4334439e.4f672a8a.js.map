{"version":3,"sources":["webpack:///./src/views/AdminLogin.vue?be57","webpack:///src/views/AdminLogin.vue","webpack:///./src/views/AdminLogin.vue?f5a5","webpack:///./src/views/AdminLogin.vue","webpack:///./src/api/admin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","ToastMessage","_v","isProcessing","clearPasswordInput","on","afterFormSubmit","staticRenderFns","components","AccountLoginForm","Toast","data","message","dataStatus","backendReturnStatus","methods","sendToastMessage","component","adminSignIn","account","password","apiHelper","post","getAdminUsers","get","getAdminTweets","deleteTweet","tweetId","delete"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,QAAQ,CAACG,MAAM,CAAC,aAAeP,EAAIQ,gBAAgBJ,EAAG,MAAM,CAACE,YAAY,SAASF,EAAG,KAAK,CAACJ,EAAIS,GAAG,UAAUL,EAAG,qBAAqB,CAACG,MAAM,CAAC,aAAeP,EAAIU,aAAa,mBAAqBV,EAAIW,oBAAoBC,GAAG,CAAC,oBAAoBZ,EAAIa,mBAAmBT,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,cAAc,CAACE,YAAY,OAAOC,MAAM,CAAC,GAAK,WAAW,CAACP,EAAIS,GAAG,WAAW,IAAI,MACnjBK,EAAkB,G,4DCsBtB,GACEC,WAAY,CACVC,iBAAJ,OACIC,MAAJ,QAEEC,KALF,WAMI,MAAO,CAELV,aAAc,CACZW,QAAS,GACTC,WAAY,IAGdC,qBAAqB,EAErBX,cAAc,EACdC,oBAAoB,IAGxBW,QAAS,CACP,gBADJ,SACA,mLAEA,kBACA,wBAHA,SAKA,oBACA,kBACA,sBAPA,mBAKA,EALA,EAKA,KAMA,qBAXA,uBAYA,8BACA,qBAbA,WAcA,sBAdA,uBAeA,kCACA,UAhBA,QAoBA,sCAGA,yCAEA,sCAzBA,qDA2BA,kBACA,kBACA,wBA7BA,6DAiCIC,iBAlCJ,SAkCA,GACMtB,KAAKO,aAAaY,WAAa,GAC/BnB,KAAKO,aAAaY,WAAa,QAC/BnB,KAAKO,aAAaW,QAAUA,KC/EkT,I,YCOhVK,EAAY,eACd,EACAzB,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAU,E,6CClBf,gBAEe,QAEbC,YAFa,YAEsB,IAArBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACrB,OAAOC,OAAUC,KAAV,gBAAgC,CAAEH,UAASC,cAGpDG,cANa,WAOX,OAAOF,OAAUG,IAAV,iBAGTC,eAVa,WAWX,OAAOJ,OAAUG,IAAV,iBAGTE,YAda,YAcY,IAAXC,EAAW,EAAXA,QACZ,OAAON,OAAUO,OAAV,wBAAkCD","file":"js/chunk-4334439e.4f672a8a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"center-view\"},[_c('div',{staticClass:\"admin-login\"},[_c('Toast',{attrs:{\"ToastMessage\":_vm.ToastMessage}}),_c('div',{staticClass:\"logo\"}),_c('h2',[_vm._v(\"後台登入\")]),_c('account-login-form',{attrs:{\"isProcessing\":_vm.isProcessing,\"clearPasswordInput\":_vm.clearPasswordInput},on:{\"after-form-submit\":_vm.afterFormSubmit}}),_c('div',{staticClass:\"login__actions\"},[_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/login\"}},[_vm._v(\"前台登入\")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"center-view\">\n    <div class=\"admin-login\">\n      <Toast :ToastMessage=\"ToastMessage\" />\n      <div class=\"logo\"></div>\n      <h2>後台登入</h2>\n      <account-login-form\n        @after-form-submit=\"afterFormSubmit\"\n        :isProcessing=\"isProcessing\"\n        :clearPasswordInput=\"clearPasswordInput\"\n      />\n      <div class=\"login__actions\">\n        <router-link class=\"link\" to=\"/login\">前台登入</router-link>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport AccountLoginForm from \"../components/AccountLoginForm.vue\";\nimport Toast from \"../components/AlertToast.vue\";\nimport adminAPI from \"../api/admin\";\n\nexport default {\n  components: {\n    AccountLoginForm,\n    Toast,\n  },\n  data() {\n    return {\n      // 母層須 props 此物件給 Toast 做為控制參數\n      ToastMessage: {\n        message: \"\",\n        dataStatus: \"\",\n      },\n      // 預設後端回傳錯誤訊息\n      backendReturnStatus: false,\n      // 防止使用者重複點擊\n      isProcessing: false,\n      clearPasswordInput: false,\n    };\n  },\n  methods: {\n    async afterFormSubmit(accountDetail) {\n      try {\n        this.isProcessing = true;\n        this.clearPasswordInput = false\n        \n        const { data } = await adminAPI.adminSignIn({\n          account: accountDetail.account,\n          password: accountDetail.password,\n        });\n\n        // 檢驗登入成功 & 帳號 role\n        if (data.status !== \"success\") {\n          this.sendToastMessage(data.message);\n          throw new Error(data.message);\n        } else if (data.user.role !== \"admin\") {\n          this.sendToastMessage(\"帳號不存在或密碼錯誤!\");\n          throw new Error();\n        }\n\n        // 將 token 存放在 localStorage 內\n        localStorage.setItem(\"token\", data.token);\n\n        // 將資料傳到 Vuex 中\n        this.$store.commit(\"setCurrentUser\", data.user);\n\n        this.$router.push({ name: \"admin-tweets\" });\n      } catch (error) {\n        console.log(error);\n        this.isProcessing = false;\n        this.clearPasswordInput = true\n      }\n    },\n    // 修改 toast message 讓 toast 監看到變化，觸發視窗跳出\n    sendToastMessage(message) {\n      this.ToastMessage.dataStatus = \"\";\n      this.ToastMessage.dataStatus = \"error\";\n      this.ToastMessage.message = message;\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AdminLogin.vue?vue&type=template&id=23173d15&\"\nimport script from \"./AdminLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./AdminLogin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { apiHelper } from '../utils/helper'\n\nexport default {\n  // 管理員登入\n  adminSignIn({ account, password }) {\n    return apiHelper.post(`/admin/signin`, { account, password })\n  },\n  // 取得管理員可見的所有用戶清單\n  getAdminUsers() {\n    return apiHelper.get(`/admin/users`)\n  },\n  // 取得管理員可見的 tweet 清單\n  getAdminTweets() {\n    return apiHelper.get(`admin/tweets`)\n  },\n  // 管理員刪除特定一筆 tweet\n  deleteTweet({ tweetId }) {\n    return apiHelper.delete(`/admin/tweets/${tweetId}`)\n  }\n}\n"],"sourceRoot":""}